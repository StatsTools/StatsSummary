% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_nfreq.R
\name{calc_nfreq}
\alias{calc_nfreq}
\title{Calculate N and Frequency function}
\usage{
calc_nfreq(
  data,
  var_expr,
  group_expr,
  pop_size = NA_real_,
  with_ci = TRUE,
  decimals = 1,
  groups_order = NA_character_,
  simplified = FALSE,
  dec_sep = ".",
  zero_to_less = FALSE,
  remove_dec100 = TRUE,
  ci_sep = "â€’"
)
}
\arguments{
\item{data}{A tibble with the data to be used.}

\item{var_expr}{A name with the name of the variable in data.}

\item{group_expr}{A name with the name of the group variable in data.}

\item{pop_size}{A named vector with population size by group. The names must be the names of the groups to be used.}

\item{with_ci}{A logical to specify if calculate CI.}

\item{decimals}{A number with the number of decimals points to present the results.}

\item{groups_order}{A character array with the names of the groups in order to be presented in the results.}

\item{simplified}{A logical to specify if Simplify the frequency presentation.}

\item{dec_sep}{A character to specify the decimal separator to be used.}

\item{zero_to_less}{A logical to specify if zero percentage should include < signal. Only applicable if decimals is greater than zero.}

\item{remove_dec100}{A logical to specify if 100.0 percent should be treated as 100. Only applicable if decimals is greater than zero.}

\item{ci_sep}{A character with a separator symbol to be used in CI.}
}
\value{
A tibble with the N and Frequency results.
}
\description{
Calculate N and Frequency function
}
\examples{
teste <- tibble(dat = factor(c('A', 'B', 'C', 'C', 'A', 'B'), levels = c('A', 'C', 'B', 'D')), group = c(1, 2, 1, 2, 1, 2))
calc_nfreq(teste, dat, group, pop_size = c('1' = 4, '2' = 4), simplified = TRUE, groups_order = c('2', '1'), decimals = 1, with_ci = TRUE, ci_sep = ';')
}
